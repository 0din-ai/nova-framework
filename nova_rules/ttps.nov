rule VulnerabilityReconnaissanceRule
{
    meta:
        description = "Detects queries about vulnerabilities in applications"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "reconnaissance/vulnerability"
        severity = "medium"
        attack_category = "LLM-informed reconnaissance"
    
    keywords:
        $vuln_terms = "vulnerability"
        $vuln_terms2 = "vulnerabilities"
        $vuln_terms3 = "exploit"
        $vuln_terms4 = "security flaw"
        $vuln_terms5 = "security hole"
        $app_reference = "application"
        $app_reference2 = "software"
        $app_reference3 = "system"
        $app_reference4 = "platform"
    
    semantics:
        $vuln_inquiry = "asking about security weaknesses in applications" (0.1)
        $recon_intent = "gathering information about potential attack vectors" (0.1)
    
    llm:
        $recon_check = "Analyze if this query is attempting to gather information about vulnerabilities in software applications that could be used for malicious purposes" (0.7)
    
    condition:
        (2 of keywords.$vuln_terms* and 1 of keywords.$app_reference*) or
        (any of semantics.*) and llm.$recon_check
}

rule CVEInformationRequestRule
{
    meta:
        description = "Detects queries about specific CVE numbers"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "reconnaissance/cve"
        severity = "medium"
        attack_category = "LLM-informed reconnaissance"
    
    keywords:
        $cve = /CVE-\d{4}-\d{4,}/
        $exploit = "exploit"
        $vulnerability = "vulnerability"
        $details = "details"
        $information = "information"
        $how_to = "how to"
        $poc = "proof of concept"
        $poc_short = "POC"
    
    semantics:
        $cve_inquiry = "requesting details about specific security vulnerabilities by CVE number" (0.1)
        $exploit_interest = "seeking information on exploiting known vulnerabilities" (0.1)
    
    llm:
        $cve_check = "Analyze if this query is requesting specific details about a CVE that could be used for malicious purposes" (0.7)
    
    condition:
        $cve and 
        ($exploit or $vulnerability or $details or $information or $how_to or $poc or $poc_short) and
        (any of semantics.*) and llm.$cve_check
}

rule WebShellExploitRule
{
    meta:
        description = "Detects queries about using SQLMap to upload web shells"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "vulnerability/webshell"
        severity = "high"
        attack_category = "LLM-assisted vulnerability research"
    
    keywords:
        $sqlmap = "sqlmap"
        $webshell = "web shell"
        $webshell2 = "webshell"
        $shell = "shell"
        $upload = "upload"
        $inject = "inject"
        $execute = "execute"
        $rce = "RCE"
        $sql_injection = "SQL injection"
        $sqli = "SQLi"
        $target = "target"
        $server = "server"
    
    semantics:
        $webshell_inquiry = "seeking information on uploading malicious web shells" (0.1)
        $sqlmap_misuse = "asking for guidance on misusing SQLMap for unauthorized access" (0.1)
    
    llm:
        $shell_upload_check = "Evaluate if this query is requesting information on using SQLMap to upload web shells or gain unauthorized remote access" (0.8)
    
    condition:
        $sqlmap and 
        ($webshell or $webshell2 or $shell) and
        ($upload or $inject) and
        ($execute or $rce or $sql_injection or $sqli) and
        ($target or $server) and
        (any of semantics.*) and llm.$shell_upload_check
}

rule TargetedExploitResearchRule
{
    meta:
        description = "Detects queries about exploiting infrastructure of specific organizations"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "vulnerability/targeted"
        severity = "high"
        attack_category = "LLM-assisted vulnerability research"
    
    keywords:
        $exploit = "exploit"
        $vulnerability = "vulnerability"
        $hack = "hack"
        $breach = "breach"
        $infrastructure = "infrastructure"
        $network = "network"
        $system = "system"
        $server = "server"
        $company = "company"
        $organization = "organization"
        $manufacturer = "manufacturer"
        $corporation = "corporation"
        $find = "find"
        $discover = "discover"
        $ways = "ways"
        $methods = "methods"
        $belonging = "belonging"
        $owned = "owned"
    
    semantics:
        $targeted_inquiry = "requesting help to exploit specific organizations" (0.1)
        $malicious_intent = "showing intent to compromise specific corporate targets" (0.1)
    
    llm:
        $target_check = "Analyze if this query is seeking assistance in finding vulnerabilities in a specific organization's infrastructure with potential malicious intent" (0.8)
    
    condition:
        ($exploit or $vulnerability or $hack or $breach) and
        ($infrastructure or $network or $system or $server) and
        ($company or $organization or $manufacturer or $corporation) and
        ($find or $discover or $ways or $methods) and
        ($belonging or $owned) and
        (any of semantics.*) and llm.$target_check
}

rule MessagingScriptingRule
{
    meta:
        description = "Detects requests for help with scripts that send programmatic messages"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "scripting/messaging"
        severity = "medium"
        attack_category = "LLM-enhanced scripting techniques"
    
    keywords:
        $code = "code"
        $script = "script"
        $program = "program"
        $api = "API"
        $sms = "SMS"
        $text = "text message"
        $message = "message"
        $send = "send"
        $sending = "sending"
        $programmatically = "programmatically"
        $bulk = "bulk"
        $mass = "mass"
        $twilio = "Twilio"
        $numbers = "numbers"
        $recipients = "recipients"
    
    semantics:
        $messaging_script = "seeking help with scripts for programmatic message sending" (0.1)
        $automation_request = "requesting assistance with automation of messaging services" (0.1)
    
    llm:
        $script_check = "Determine if this query is requesting help with developing or debugging code that programmatically sends text messages" (0.7)
    
    condition:
        ($code or $script or $program) and
        ($sms or $text or $message) and
        ($send or $sending or $programmatically or $bulk or $mass) and
        ($api or $twilio) and
        ($numbers or $recipients) and
        (any of semantics.*) and llm.$script_check
}

rule SecurityToolExtensionRule
{
    meta:
        description = "Detects requests for help developing extensions for cybersecurity tools"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "scripting/security_tools"
        severity = "medium"
        attack_category = "LLM-enhanced scripting techniques"
    
    keywords:
        $develop = "develop"
        $create = "create"
        $debug = "debug"
        $extension = "extension"
        $plugin = "plugin"
        $module = "module"
        $addon = "addon"
        $cybersecurity = "cybersecurity"
        $security = "security"
        $pentest = "pentest"
        $penetration = "penetration"
        $metasploit = "Metasploit"
        $burp = "Burp"
        $nmap = "Nmap"
        $wireshark = "Wireshark"
    
    semantics:
        $tool_dev_request = "requesting assistance with developing security tool extensions" (0.1)
        $security_tool_modification = "seeking help modifying or extending cybersecurity tools" (0.1)
    
    llm:
        $extension_check = "Analyze if this query is asking for help developing or debugging an extension for a cybersecurity or penetration testing tool" (0.7)
    
    condition:
        (any of keywords.* and any of semantics.*) or llm.$extension_check
}

rule GovernmentPhishingThemeRule
{
    meta:
        description = "Detects requests for effective government-themed phishing content"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "social_engineering/government"
        severity = "high"
        attack_category = "LLM-supported social engineering"
    
    keywords:
        $theme = "theme"
        $themes = "themes"
        $topic = "topic"
        $subject = "subject"
        $interesting = "interesting"
        $engaging = "engaging"
        $attention = "attention"
        $employee = "employee"
        $employees = "employees"
        $staff = "staff"
        $government = "government"
        $department = "department"
        $agency = "agency"
        $federal = "federal"
        $attachment = "attachment"
        $attachments = "attachments"
        $name = "name"
        $file = "file"
        $files = "files"
        $avoid = "avoid"
        $bypass = "bypass"
        $blocked = "blocked"
        $filter = "filter"
    
    semantics:
        $phishing_inquiry = "requesting help crafting government-targeted phishing themes" (0.1)
        $evasion_tactics = "seeking advice on evading security filters with attachment names" (0.1)
    
    llm:
        $phishing_check = "Analyze if this query is requesting themes that government employees would find interesting and names for attachments to avoid being blocked, potentially for phishing purposes" (0.8)
    
    condition:
        ($theme or $themes or $topic or $subject) and
        ($interesting or $engaging or $attention) and
        ($employee or $employees or $staff) and
        ($government or $department or $agency or $federal) and
        ($attachment or $attachments or $name or $file or $files) and
        ($avoid or $bypass or $blocked or $filter) and
        (any of semantics.*) and llm.$phishing_check
}

rule JobRecruitmentVariationRule
{
    meta:
        description = "Detects requests for variations of job recruitment messages"
        author = "Thomas Roccia"
        version = "1.0.0"
        category = "social_engineering/recruitment"
        severity = "high"
        attack_category = "LLM-supported social engineering"
    
    keywords:
        $variation = "variation"
        $variations = "variations"
        $alternate = "alternate"
        $alternative = "alternative"
        $different = "different"
        $version = "version"
        $rewrite = "rewrite"
        $rephrase = "rephrase"
        $job = "job"
        $recruitment = "recruitment"
        $hiring = "hiring"
        $position = "position"
        $opportunity = "opportunity"
        $message = "message"
        $email = "email"
        $text = "text"
        $provide = "provide"
        $provided = "provided"
        $my = "my"
    
    semantics:
        $recruitment_variation = "requesting variations of job recruitment messages" (0.1)
        $potential_phishing = "possibly seeking help creating convincing recruitment phishing messages" (0.1)
    
    llm:
        $variation_check = "Determine if this query is requesting variations of an attacker-provided job recruitment message that could be used for social engineering" (0.8)
    
    condition:
        ($variation or $variations or $alternate or $alternative or $different or 
         $version or $rewrite or $rephrase) and
        ($job or $recruitment or $hiring or $position or $opportunity) and
        ($message or $email or $text) and
        ($provide or $provided or $my) and
        (any of semantics.*) and llm.$variation_check
}